{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianwulf-andersen/Documents/Fagprojekt-/my-app/frontEnd/src/Views/SudokuView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useContext, useRef } from 'react';\nimport './CSS/SudokuView.css';\nimport { isValidSudoku } from '../sudokuUtils';\nimport { sudokuNotes } from '../sudokuNotes';\nimport { fetchNewBoard } from '../fetchNewBoard';\nimport UserContext from '../UserContext';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SudokuView() {\n  _s();\n  var _location$state2;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [n, setN] = useState(9); // Initialiserer n med en standardværdi eller fallback værdi\n  const [grid, setGrid] = useState([]);\n  const [validity, setValidity] = useState(Array(n).fill().map(() => Array(n).fill(true)));\n  const [userEdits, setUserEdits] = useState(Array(n).fill().map(() => Array(n).fill(false)));\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\n  const [editableCells, setEditableCells] = useState([]);\n  const [timer, setTimer] = useState(0);\n  const isTimerActiveRef = useRef(false);\n  const {\n    username\n  } = useContext(UserContext);\n  const {\n    board,\n    noteMode,\n    toggleNoteMode,\n    handleCellInput\n  } = sudokuNotes( /* initialBoardState here */);\n\n  // Henter et nyt board fra serveren \n  useEffect(() => {\n    var _location$state;\n    const n = (_location$state = location.state) !== null && _location$state !== void 0 && _location$state.n ? location.state.n : 9; // Fallback til 9 som standard størrelse\n    setN(n);\n    fetchNewBoard({\n      n,\n      setGrid,\n      setEditableCells,\n      setUserEdits,\n      setValidity,\n      setIsDataLoaded,\n      setTimer,\n      setIsTimerActive: isTimerActiveRef.current ? () => {} : startTimer\n    });\n  }, [(_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.n]);\n\n  // Timer logik \n  const startTimer = () => {\n    if (!isTimerActiveRef.current) {\n      isTimerActiveRef.current = true;\n      const interval = setInterval(() => {\n        if (isTimerActiveRef.current) {\n          setTimer(prevTimer => prevTimer + 1);\n        } else {\n          clearInterval(interval);\n        }\n      }, 1000);\n    }\n  };\n\n  // Stop timer-funktion\n  const stopTimer = () => {\n    isTimerActiveRef.current = false;\n  };\n\n  // Håndterer input fra brugeren\n  const handleInputChange = useCallback((event, i, j) => {\n    if (!editableCells[i][j] || !noteMode) {\n      return;\n    }\n    const value = event.target.value;\n    // Tjekker om input er gyldigt \n    if (value === '' || /^\\d+$/.test(value) && value >= 1 && value <= n) {\n      const numValue = value === '' ? 0 : parseInt(value, 10);\n      const newGrid = grid.map((row, rowIndex) => row.map((cell, cellIndex) => rowIndex === i && cellIndex === j ? numValue : cell));\n      setGrid(newGrid);\n      const value = event.target.value;\n      const newUserEdits = [...userEdits];\n      newUserEdits[i][j] = true;\n      setUserEdits(newUserEdits);\n      stopTimer();\n    }\n  }, [editableCells, grid, userEdits, n, noteMode, handleInputChange]);\n  function getUserLocation(callback) {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        callback(latitude, longitude);\n      }, error => {\n        console.error(\"Geolocation error:\", error);\n        callback(null, null); // Håndter fejl eller ingen tilladelse\n      });\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n      callback(null, null); // Håndter unsupported browser\n    }\n  }\n  const submitScore = useCallback((username, time) => {\n    getUserLocation((latitude, longitude) => {\n      const location = {\n        lat: latitude,\n        lng: longitude\n      };\n      console.log({\n        username,\n        time,\n        location\n      }); // Debugging\n      fetch('http://localhost:3000/submit', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          time,\n          location\n        })\n      }).then(response => response.json()).then(data => {\n        console.log('Score submitted:', data);\n        // Opdater UI eller state her baseret på svaret, hvis nødvendigt\n      }).catch(error => console.error('Error submitting score:', error));\n    });\n  }, []);\n\n  // Tjekker om Sudoku er løst\n  const checkSudoku = useCallback(() => {\n    if (!isDataLoaded) return;\n    const {\n      isValid,\n      newValidity\n    } = isValidSudoku(grid);\n    setValidity(newValidity);\n    // Tjekker om brættet er fuldt udfyldt og gyldigt\n    const isFullyFilled = grid.every(row => row.every(value => value !== 0));\n    if (isValid && isFullyFilled) {\n      alert(`Congratulations! You've solved the Sudoku in ${timer} seconds!`);\n      stopTimer();\n      submitScore(username, timer);\n      navigate('/');\n    }\n  }, [grid, isDataLoaded, timer, username, navigate, submitScore]);\n  useEffect(() => {\n    if (isDataLoaded) {\n      checkSudoku();\n    }\n  }, [grid, isDataLoaded, checkSudoku]);\n  useEffect(() => {\n    return () => {\n      isTimerActiveRef.current = false; // Sørg for at timeren stopper, når komponenten unmounts\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SudokuView\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sudoku\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [\"Timer: \", timer, \" sekunder\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleNoteMode,\n      children: noteMode ? 'Exit Note Mode' : 'Enter Note Mode'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: board.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((cell, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: !validity[i][j] ? 'invalid' : '',\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: `${!validity[i][j] ? 'invalid-input' : ''} ${userEdits[i][j] ? 'user-input' : ''}`,\n              value: cell === 0 ? '' : cell,\n              onChange: event => handleInputChange(event, i, j),\n              readOnly: !editableCells[i][j]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 3\n  }, this);\n}\n_s(SudokuView, \"RwhLT8yTDDhSs1aDdgnTsDzZB6k=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = SudokuView;\nexport default SudokuView;\nvar _c;\n$RefreshReg$(_c, \"SudokuView\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useContext","useRef","isValidSudoku","sudokuNotes","fetchNewBoard","UserContext","useLocation","useNavigate","jsxDEV","_jsxDEV","SudokuView","_s","_location$state2","location","navigate","n","setN","grid","setGrid","validity","setValidity","Array","fill","map","userEdits","setUserEdits","isDataLoaded","setIsDataLoaded","editableCells","setEditableCells","timer","setTimer","isTimerActiveRef","username","board","noteMode","toggleNoteMode","handleCellInput","_location$state","state","setIsTimerActive","current","startTimer","interval","setInterval","prevTimer","clearInterval","stopTimer","handleInputChange","event","i","j","value","target","test","numValue","parseInt","newGrid","row","rowIndex","cell","cellIndex","newUserEdits","getUserLocation","callback","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","error","console","log","submitScore","time","lat","lng","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","checkSudoku","isValid","newValidity","isFullyFilled","every","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","readOnly","_c","$RefreshReg$"],"sources":["/Users/sebastianwulf-andersen/Documents/Fagprojekt-/my-app/frontEnd/src/Views/SudokuView.js"],"sourcesContent":["import React, { useState, useEffect, useCallback,useContext,useRef } from 'react';\nimport './CSS/SudokuView.css';\nimport { isValidSudoku } from '../sudokuUtils';\nimport { sudokuNotes } from '../sudokuNotes';\nimport { fetchNewBoard } from '../fetchNewBoard';\nimport UserContext from '../UserContext';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\n\nfunction SudokuView() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  \n  const [n, setN] = useState(9); // Initialiserer n med en standardværdi eller fallback værdi\n  const [grid, setGrid] = useState([]);\n\n  const [validity, setValidity] = useState(Array(n).fill().map(() => Array(n).fill(true)));\n  const [userEdits, setUserEdits] = useState(Array(n).fill().map(() => Array(n).fill(false)));\n\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\n  const [editableCells, setEditableCells] = useState([]);\n  const [timer, setTimer] = useState(0);\n  const isTimerActiveRef = useRef(false);\n  const { username } = useContext(UserContext);\n  const { board, noteMode, toggleNoteMode, handleCellInput } = sudokuNotes(/* initialBoardState here */);\n\n\n  // Henter et nyt board fra serveren \n  useEffect(() => {\n    const n = location.state?.n ? location.state.n : 9; // Fallback til 9 som standard størrelse\n    setN(n);\n    fetchNewBoard({\n      n,\n      setGrid,\n      setEditableCells,\n      setUserEdits,\n      setValidity,\n      setIsDataLoaded,\n      setTimer,\n      setIsTimerActive: isTimerActiveRef.current ? () => {} : startTimer,\n    });\n  }, [location.state?.n]);\n\n  // Timer logik \n  const startTimer = () => {\n    if (!isTimerActiveRef.current) {\n      isTimerActiveRef.current = true;\n      const interval = setInterval(() => {\n        if (isTimerActiveRef.current) {\n          setTimer((prevTimer) => prevTimer + 1);\n        } else {\n          clearInterval(interval);\n        }\n      }, 1000);\n    }\n  };\n\n  // Stop timer-funktion\n  const stopTimer = () => {\n    isTimerActiveRef.current = false;\n  };\n  \n  // Håndterer input fra brugeren\n  const handleInputChange = useCallback((event, i, j) => {\n    if (!editableCells[i][j] || !noteMode) {\n      return;\n    }\n    const value = event.target.value;\n    // Tjekker om input er gyldigt \n    if (value === '' || (/^\\d+$/.test(value) && value >= 1 && value <= n)) {\n      const numValue = value === '' ? 0 : parseInt(value, 10);\n      const newGrid = grid.map((row, rowIndex) =>\n        row.map((cell, cellIndex) => rowIndex === i && cellIndex === j ? numValue : cell)\n      );\n      setGrid(newGrid);\n      const value = event.target.value;\n      const newUserEdits = [...userEdits];\n      newUserEdits[i][j] = true;\n      setUserEdits(newUserEdits);\n      stopTimer();\n    }\n  }, [editableCells, grid, userEdits,n, noteMode, handleInputChange]);\n\n\n  function getUserLocation(callback) {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          callback(latitude, longitude);\n        },\n        (error) => {\n          console.error(\"Geolocation error:\", error);\n          callback(null, null); // Håndter fejl eller ingen tilladelse\n        }\n      );\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n      callback(null, null); // Håndter unsupported browser\n    }\n  }\n  const submitScore = useCallback((username, time) => {\n    getUserLocation((latitude, longitude) => {\n      const location = { lat: latitude, lng: longitude };\n      console.log({ username, time, location }); // Debugging\n      fetch('http://localhost:3000/submit', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username,\n          time,\n          location,\n        }),\n      })\n      .then(response => response.json())\n      .then(data => {\n        console.log('Score submitted:', data);\n        // Opdater UI eller state her baseret på svaret, hvis nødvendigt\n      })\n      .catch(error => console.error('Error submitting score:', error));\n    });\n  }, []);\n\n\n\n\n  // Tjekker om Sudoku er løst\n  const checkSudoku = useCallback(() => {\n    if (!isDataLoaded) return;\n    const { isValid, newValidity } = isValidSudoku(grid);\n    setValidity(newValidity);\n    // Tjekker om brættet er fuldt udfyldt og gyldigt\n    const isFullyFilled = grid.every(row => row.every(value => value !== 0));\n    if (isValid && isFullyFilled) {\n      alert(`Congratulations! You've solved the Sudoku in ${timer} seconds!`);\n      stopTimer();\n      submitScore(username, timer);\n      navigate('/'); \n\n    }\n  }, [grid, isDataLoaded, timer, username,navigate,submitScore]);\n\n  useEffect(() => {\n    if (isDataLoaded) {\n      checkSudoku();\n    }\n  }, [grid, isDataLoaded, checkSudoku]);\n\n\n\n\nuseEffect(() => {\n  return () => {\n    isTimerActiveRef.current = false; // Sørg for at timeren stopper, når komponenten unmounts\n  };\n}, []);\n  \n\nreturn (\n  <div className=\"SudokuView\">\n    <h1>Sudoku</h1>\n    <div className=\"timer\">Timer: {timer} sekunder</div>\n    <button onClick={toggleNoteMode}>{noteMode ? 'Exit Note Mode' : 'Enter Note Mode'}</button>\n    <table className=\"center\">\n      <tbody>\n        {board.map((row, i) => (\n          <tr key={i}>\n            {row.map((cell, j) => (\n              <td key={j} className={!validity[i][j] ? 'invalid' : ''}>\n                <input\n                  type=\"text\"\n                  className={`${!validity[i][j] ? 'invalid-input' : ''} ${userEdits[i][j] ? 'user-input' : ''}`}\n                  value={cell === 0 ? '' : cell}\n                  onChange={(event) => handleInputChange(event, i, j)}\n                  readOnly={!editableCells[i][j]}\n                />\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </div>\n);\n}\n\nexport default SudokuView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
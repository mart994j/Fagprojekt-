{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\OneDrive\\\\Skrivebord\\\\Fagprojekt\\\\Fagprojekt-\\\\my-app\\\\frontEnd\\\\src\\\\Views\\\\SudokuView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useContext, useRef } from 'react';\nimport './CSS/SudokuView.css';\nimport { isValidSudoku } from '../sudokuUtils';\nimport { fetchNewBoard } from '../fetchNewBoard';\nimport UserContext from '../UserContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SudokuView() {\n  _s();\n  const location = useLocation();\n  const [grid, setGrid] = useState([9]);\n  const [validity, setValidity] = useState(Array(9).fill().map(() => Array(9).fill(true)));\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\n  const [editableCells, setEditableCells] = useState([]);\n  const [userEdits, setUserEdits] = useState(Array(9).fill().map(() => Array(9).fill(false)));\n  const [timer, setTimer] = useState(0);\n  const isTimerActiveRef = useRef(false);\n  const {\n    username\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Tjekker om n er tilgængelig i location state og opdaterer derefter gridSize\n    if (location.state && location.state.n) {\n      setGridSize(location.state.n);\n    }\n  }, [location]);\n\n  // Henter et nyt board fra serveren \n  useEffect(() => {\n    fetchNewBoard({\n      setGrid,\n      setEditableCells,\n      setUserEdits,\n      setValidity,\n      setIsDataLoaded,\n      setTimer,\n      setIsTimerActive: isTimerActiveRef.current ? () => {} : startTimer\n    });\n  }, []);\n\n  // Timer logik \n  const startTimer = () => {\n    if (!isTimerActiveRef.current) {\n      isTimerActiveRef.current = true;\n      const interval = setInterval(() => {\n        if (isTimerActiveRef.current) {\n          setTimer(prevTimer => prevTimer + 1);\n        } else {\n          clearInterval(interval);\n        }\n      }, 1000);\n    }\n  };\n\n  // Stop timer-funktion\n  const stopTimer = () => {\n    isTimerActiveRef.current = false;\n  };\n\n  // Håndterer input fra brugeren\n  const handleInputChange = useCallback((event, i, j) => {\n    if (!editableCells[i][j]) {\n      return;\n    }\n    const value = event.target.value;\n    // Tjekker om input er gyldigt \n    if (value === '' || /^\\d+$/.test(value) && value >= 1 && value <= 9) {\n      const numValue = value === '' ? 0 : parseInt(value, 10);\n      const newGrid = grid.map((row, rowIndex) => row.map((cell, cellIndex) => rowIndex === i && cellIndex === j ? numValue : cell));\n      setGrid(newGrid);\n      const newUserEdits = [...userEdits];\n      newUserEdits[i][j] = true;\n      setUserEdits(newUserEdits);\n      stopTimer();\n    }\n  }, [editableCells, grid, userEdits]);\n  function getUserLocation(callback) {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        callback(latitude, longitude);\n      }, error => {\n        console.error(\"Geolocation error:\", error);\n        callback(null, null); // Håndter fejl eller ingen tilladelse\n      });\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n      callback(null, null); // Håndter unsupported browser\n    }\n  }\n  const submitScore = useCallback((username, time) => {\n    getUserLocation((latitude, longitude) => {\n      const location = {\n        lat: latitude,\n        lng: longitude\n      };\n      console.log({\n        username,\n        time,\n        location\n      }); // Debugging\n      fetch('http://localhost:3000/submit', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          time,\n          location\n        })\n      }).then(response => response.json()).then(data => {\n        console.log('Score submitted:', data);\n        // Opdater UI eller state her baseret på svaret, hvis nødvendigt\n      }).catch(error => console.error('Error submitting score:', error));\n    });\n  }, []);\n\n  // Tjekker om Sudoku er løst\n  const checkSudoku = useCallback(() => {\n    if (!isDataLoaded) return;\n    const {\n      isValid,\n      newValidity\n    } = isValidSudoku(grid);\n    setValidity(newValidity);\n    // Tjekker om brættet er fuldt udfyldt og gyldigt\n    const isFullyFilled = grid.every(row => row.every(value => value !== 0));\n    if (isValid && isFullyFilled) {\n      alert(`Congratulations! You've solved the Sudoku in ${timer} seconds!`);\n      stopTimer();\n      submitScore(username, timer);\n      navigate('/');\n    }\n  }, [grid, isDataLoaded, timer, username, navigate, submitScore]);\n  useEffect(() => {\n    if (isDataLoaded) {\n      checkSudoku();\n    }\n  }, [grid, isDataLoaded, checkSudoku]);\n  useEffect(() => {\n    return () => {\n      isTimerActiveRef.current = false; // Sørg for at timeren stopper, når komponenten unmounts\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SudokuView\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sudoku\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [\"Timer: \", timer, \" sekunder\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: grid.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((value, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: !validity[i][j] ? 'invalid' : '',\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: `${!validity[i][j] ? 'invalid-input' : ''} ${userEdits[i][j] ? 'user-input' : ''}`,\n              value: value === 0 ? '' : value,\n              onChange: event => handleInputChange(event, i, j),\n              readOnly: !editableCells[i][j]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this)\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_s(SudokuView, \"VYD2lFxnod1Nmz6fltWprraCuOw=\", true, function () {\n  return [useNavigate];\n});\n_c = SudokuView;\nexport default SudokuView;\nvar _c;\n$RefreshReg$(_c, \"SudokuView\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useContext","useRef","isValidSudoku","fetchNewBoard","UserContext","useNavigate","jsxDEV","_jsxDEV","SudokuView","_s","location","useLocation","grid","setGrid","validity","setValidity","Array","fill","map","isDataLoaded","setIsDataLoaded","editableCells","setEditableCells","userEdits","setUserEdits","timer","setTimer","isTimerActiveRef","username","navigate","state","n","setGridSize","setIsTimerActive","current","startTimer","interval","setInterval","prevTimer","clearInterval","stopTimer","handleInputChange","event","i","j","value","target","test","numValue","parseInt","newGrid","row","rowIndex","cell","cellIndex","newUserEdits","getUserLocation","callback","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","error","console","log","submitScore","time","lat","lng","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","checkSudoku","isValid","newValidity","isFullyFilled","every","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/marti/OneDrive/Skrivebord/Fagprojekt/Fagprojekt-/my-app/frontEnd/src/Views/SudokuView.js"],"sourcesContent":["import React, { useState, useEffect, useCallback,useContext,useRef } from 'react';\r\nimport './CSS/SudokuView.css';\r\nimport { isValidSudoku } from '../sudokuUtils';\r\nimport { fetchNewBoard } from '../fetchNewBoard';\r\nimport UserContext from '../UserContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nfunction SudokuView() {\r\n  const location = useLocation();\r\n  const [grid, setGrid] = useState([9]);\r\n  const [validity, setValidity] = useState(Array(9).fill().map(() => Array(9).fill(true)));\r\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\r\n  const [editableCells, setEditableCells] = useState([]);\r\n  const [userEdits, setUserEdits] = useState(Array(9).fill().map(() => Array(9).fill(false)));\r\n  const [timer, setTimer] = useState(0);\r\n  const isTimerActiveRef = useRef(false);\r\n  const { username } = useContext(UserContext);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Tjekker om n er tilgængelig i location state og opdaterer derefter gridSize\r\n    if (location.state && location.state.n) {\r\n      setGridSize(location.state.n);\r\n    }\r\n  }, [location]);\r\n\r\n  // Henter et nyt board fra serveren \r\n  useEffect(() => {\r\n    fetchNewBoard({\r\n      setGrid,\r\n      setEditableCells,\r\n      setUserEdits,\r\n      setValidity,\r\n      setIsDataLoaded,\r\n      setTimer,\r\n      setIsTimerActive: isTimerActiveRef.current ? () => {} : startTimer,\r\n    });\r\n  }, []);\r\n\r\n  // Timer logik \r\n  const startTimer = () => {\r\n    if (!isTimerActiveRef.current) {\r\n      isTimerActiveRef.current = true;\r\n      const interval = setInterval(() => {\r\n        if (isTimerActiveRef.current) {\r\n          setTimer((prevTimer) => prevTimer + 1);\r\n        } else {\r\n          clearInterval(interval);\r\n        }\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  // Stop timer-funktion\r\n  const stopTimer = () => {\r\n    isTimerActiveRef.current = false;\r\n  };\r\n  \r\n  // Håndterer input fra brugeren\r\n  const handleInputChange = useCallback((event, i, j) => {\r\n    if (!editableCells[i][j]) {\r\n      return;\r\n    }\r\n    const value = event.target.value;\r\n    // Tjekker om input er gyldigt \r\n    if (value === '' || (/^\\d+$/.test(value) && value >= 1 && value <= 9)) {\r\n      const numValue = value === '' ? 0 : parseInt(value, 10);\r\n      const newGrid = grid.map((row, rowIndex) =>\r\n        row.map((cell, cellIndex) => rowIndex === i && cellIndex === j ? numValue : cell)\r\n      );\r\n      setGrid(newGrid);\r\n\r\n      const newUserEdits = [...userEdits];\r\n      newUserEdits[i][j] = true;\r\n      setUserEdits(newUserEdits);\r\n      stopTimer();\r\n    }\r\n  }, [editableCells, grid, userEdits]);\r\n\r\n\r\n  function getUserLocation(callback) {\r\n    if (\"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          callback(latitude, longitude);\r\n        },\r\n        (error) => {\r\n          console.error(\"Geolocation error:\", error);\r\n          callback(null, null); // Håndter fejl eller ingen tilladelse\r\n        }\r\n      );\r\n    } else {\r\n      console.log(\"Geolocation is not supported by this browser.\");\r\n      callback(null, null); // Håndter unsupported browser\r\n    }\r\n  }\r\n  const submitScore = useCallback((username, time) => {\r\n    getUserLocation((latitude, longitude) => {\r\n      const location = { lat: latitude, lng: longitude };\r\n      console.log({ username, time, location }); // Debugging\r\n      fetch('http://localhost:3000/submit', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          username,\r\n          time,\r\n          location,\r\n        }),\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log('Score submitted:', data);\r\n        // Opdater UI eller state her baseret på svaret, hvis nødvendigt\r\n      })\r\n      .catch(error => console.error('Error submitting score:', error));\r\n    });\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  // Tjekker om Sudoku er løst\r\n  const checkSudoku = useCallback(() => {\r\n    if (!isDataLoaded) return;\r\n    const { isValid, newValidity } = isValidSudoku(grid);\r\n    setValidity(newValidity);\r\n    // Tjekker om brættet er fuldt udfyldt og gyldigt\r\n    const isFullyFilled = grid.every(row => row.every(value => value !== 0));\r\n    if (isValid && isFullyFilled) {\r\n      alert(`Congratulations! You've solved the Sudoku in ${timer} seconds!`);\r\n      stopTimer();\r\n      submitScore(username, timer);\r\n      navigate('/'); \r\n\r\n    }\r\n  }, [grid, isDataLoaded, timer, username,navigate,submitScore]);\r\n\r\n  useEffect(() => {\r\n    if (isDataLoaded) {\r\n      checkSudoku();\r\n    }\r\n  }, [grid, isDataLoaded, checkSudoku]);\r\n\r\n\r\n\r\n\r\nuseEffect(() => {\r\n  return () => {\r\n    isTimerActiveRef.current = false; // Sørg for at timeren stopper, når komponenten unmounts\r\n  };\r\n}, []);\r\n  \r\n\r\n  return (\r\n    <div className=\"SudokuView\">\r\n      <h1>Sudoku</h1>\r\n      <div className=\"timer\">Timer: {timer} sekunder</div>\r\n      <table className=\"center\">\r\n        <tbody>\r\n          {grid.map((row, i) => (\r\n            <tr key={i}>\r\n              {row.map((value, j) => (\r\n                <td key={j} className={!validity[i][j] ? 'invalid' : ''}>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={`${!validity[i][j] ? 'invalid-input' : ''} ${userEdits[i][j] ? 'user-input' : ''}`}\r\n                    value={value === 0 ? '' : value}\r\n                    onChange={(event) => handleInputChange(event, i, j)}\r\n                    readOnly={!editableCells[i][j]}\r\n                  />\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SudokuView;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
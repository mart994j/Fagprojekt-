{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\OneDrive\\\\Skrivebord\\\\Fagprojekt\\\\Fagprojekt-\\\\my-app\\\\src\\\\SudokuView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './SudokuView.css';\nimport { SudokuGenerator } from './SudokuGenerator.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SudokuView() {\n  _s();\n  const [grid, setGrid] = useState([]);\n  useEffect(() => {\n    // Lav borde med 10 huller\n    const newBoard = SudokuGenerator.generateBoard();\n    SudokuGenerator.removeNumbers(newBoard, 10);\n    setGrid(newBoard);\n  }, []);\n  const handleInputChange = (event, i, j) => {\n    const value = event.target.value;\n    // check om input er et tal mellem 1 og 9\n    if (value === '' || /^\\d+$/.test(value) && value >= 1 && value <= 9) {\n      const numValue = value === '' ? 0 : parseInt(value, 10); // konverter til tal\n\n      // lav en ny kopi af grid og opdater værdien på den valgte celle\n      const newGrid = grid.map((row, rowIndex) => row.map((cell, cellIndex) => rowIndex === i && cellIndex === j ? numValue : cell));\n      setGrid(newGrid);\n    }\n    //hvis input ikke er et tal mellem 1 og 9, så gør ingenting\n  };\n  const isValidSudoku = () => {\n    for (let i = 0; i < 9; i++) {\n      const row = new Set();\n      const col = new Set();\n      const box = new Set();\n      for (let j = 0; j < 9; j++) {\n        // tjek værdier i række, kolonne og boks\n        const valueRow = grid[i][j];\n        const valueCol = grid[j][i];\n        const valueBox = grid[3 * Math.floor(i / 3) + Math.floor(j / 3)][3 * (i % 3) + j % 3];\n        // tjek om værdien allerede findes i række, kolonne eller boks\n        if (valueRow > 0 && row.has(valueRow) || valueCol > 0 && col.has(valueCol) || valueBox > 0 && box.has(valueBox)) {\n          return 'Invalid Sudoku';\n        }\n        // tilføj værdier til række, kolonne og boks\n        row.add(valueRow);\n        col.add(valueCol);\n        box.add(valueBox);\n      }\n    }\n    // hvis ingen værdier er blevet fundet, så er det en valid sudoku\n    return 'Valid Sudoku';\n  };\n  // tjek om sudoku er valid\n  const checkSudoku = () => {\n    alert(isValidSudoku()); //vis alert med resultat\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SudokuView\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: grid.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((value, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: value === 0 ? '' : value,\n              onChange: event => handleInputChange(event, i, j)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkSudoku,\n      children: \"Check Sudoku\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(SudokuView, \"w1YSakViRD9z3AUkL5Qso5coyFg=\");\n_c = SudokuView;\nexport default SudokuView;\nvar _c;\n$RefreshReg$(_c, \"SudokuView\");","map":{"version":3,"names":["React","useState","useEffect","SudokuGenerator","jsxDEV","_jsxDEV","SudokuView","_s","grid","setGrid","newBoard","generateBoard","removeNumbers","handleInputChange","event","i","j","value","target","test","numValue","parseInt","newGrid","map","row","rowIndex","cell","cellIndex","isValidSudoku","Set","col","box","valueRow","valueCol","valueBox","Math","floor","has","add","checkSudoku","alert","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/marti/OneDrive/Skrivebord/Fagprojekt/Fagprojekt-/my-app/src/SudokuView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './SudokuView.css';\r\nimport { SudokuGenerator } from './SudokuGenerator.js'; \r\n\r\nfunction SudokuView() {\r\n  const [grid, setGrid] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Lav borde med 10 huller\r\n    const newBoard = SudokuGenerator.generateBoard();\r\n    SudokuGenerator.removeNumbers(newBoard, 10);\r\n    setGrid(newBoard);\r\n  }, []);\r\n\r\n  const handleInputChange = (event, i, j) => {\r\n    const value = event.target.value;\r\n    // check om input er et tal mellem 1 og 9\r\n    if (value === '' || (/^\\d+$/.test(value) && value >= 1 && value <= 9)) {\r\n      const numValue = value === '' ? 0 : parseInt(value, 10); // konverter til tal\r\n\r\n      // lav en ny kopi af grid og opdater værdien på den valgte celle\r\n      const newGrid = grid.map((row, rowIndex) =>\r\n        row.map((cell, cellIndex) =>\r\n          rowIndex === i && cellIndex === j ? numValue : cell\r\n        )\r\n      );\r\n\r\n      setGrid(newGrid);\r\n    }\r\n    //hvis input ikke er et tal mellem 1 og 9, så gør ingenting\r\n  };\r\n\r\n  const isValidSudoku = () => {\r\n    for (let i = 0; i < 9; i++) {\r\n      const row = new Set();\r\n      const col = new Set();\r\n      const box = new Set();\r\n\r\n      for (let j = 0; j < 9; j++) {\r\n        // tjek værdier i række, kolonne og boks\r\n        const valueRow = grid[i][j];\r\n        const valueCol = grid[j][i];\r\n        const valueBox = grid[3 * Math.floor(i / 3) + Math.floor(j / 3)][3 * (i % 3) + (j % 3)];\r\n        // tjek om værdien allerede findes i række, kolonne eller boks\r\n        if ((valueRow > 0 && row.has(valueRow)) || (valueCol > 0 && col.has(valueCol)) || (valueBox > 0 && box.has(valueBox))) {\r\n          return 'Invalid Sudoku';\r\n        }\r\n        // tilføj værdier til række, kolonne og boks\r\n        row.add(valueRow);\r\n        col.add(valueCol);\r\n        box.add(valueBox);\r\n      }\r\n    }\r\n    // hvis ingen værdier er blevet fundet, så er det en valid sudoku\r\n    return 'Valid Sudoku';\r\n  };\r\n  // tjek om sudoku er valid\r\n  const checkSudoku = () => {\r\n    alert(isValidSudoku()); //vis alert med resultat\r\n  };\r\n\r\n  return (\r\n    <div className=\"SudokuView\">\r\n      <table className=\"center\">\r\n        <tbody>\r\n          {grid.map((row, i) => (\r\n            <tr key={i}>\r\n              {row.map((value, j) => (\r\n                <td key={j}>\r\n                  <input \r\n                    type=\"text\" \r\n                    value={value === 0 ? '' : value} \r\n                    onChange={(event) => handleInputChange(event, i, j)} \r\n                  />\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <button onClick={checkSudoku}>Check Sudoku</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SudokuView;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,kBAAkB;AACzB,SAASC,eAAe,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,QAAQ,GAAGP,eAAe,CAACQ,aAAa,CAAC,CAAC;IAChDR,eAAe,CAACS,aAAa,CAACF,QAAQ,EAAE,EAAE,CAAC;IAC3CD,OAAO,CAACC,QAAQ,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,CAAC,EAAEC,CAAC,KAAK;IACzC,MAAMC,KAAK,GAAGH,KAAK,CAACI,MAAM,CAACD,KAAK;IAChC;IACA,IAAIA,KAAK,KAAK,EAAE,IAAK,OAAO,CAACE,IAAI,CAACF,KAAK,CAAC,IAAIA,KAAK,IAAI,CAAC,IAAIA,KAAK,IAAI,CAAE,EAAE;MACrE,MAAMG,QAAQ,GAAGH,KAAK,KAAK,EAAE,GAAG,CAAC,GAAGI,QAAQ,CAACJ,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;;MAEzD;MACA,MAAMK,OAAO,GAAGd,IAAI,CAACe,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,KACrCD,GAAG,CAACD,GAAG,CAAC,CAACG,IAAI,EAAEC,SAAS,KACtBF,QAAQ,KAAKV,CAAC,IAAIY,SAAS,KAAKX,CAAC,GAAGI,QAAQ,GAAGM,IACjD,CACF,CAAC;MAEDjB,OAAO,CAACa,OAAO,CAAC;IAClB;IACA;EACF,CAAC;EAED,MAAMM,aAAa,GAAGA,CAAA,KAAM;IAC1B,KAAK,IAAIb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,MAAMS,GAAG,GAAG,IAAIK,GAAG,CAAC,CAAC;MACrB,MAAMC,GAAG,GAAG,IAAID,GAAG,CAAC,CAAC;MACrB,MAAME,GAAG,GAAG,IAAIF,GAAG,CAAC,CAAC;MAErB,KAAK,IAAIb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1B;QACA,MAAMgB,QAAQ,GAAGxB,IAAI,CAACO,CAAC,CAAC,CAACC,CAAC,CAAC;QAC3B,MAAMiB,QAAQ,GAAGzB,IAAI,CAACQ,CAAC,CAAC,CAACD,CAAC,CAAC;QAC3B,MAAMmB,QAAQ,GAAG1B,IAAI,CAAC,CAAC,GAAG2B,IAAI,CAACC,KAAK,CAACrB,CAAC,GAAG,CAAC,CAAC,GAAGoB,IAAI,CAACC,KAAK,CAACpB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAID,CAAC,GAAG,CAAC,CAAC,GAAIC,CAAC,GAAG,CAAE,CAAC;QACvF;QACA,IAAKgB,QAAQ,GAAG,CAAC,IAAIR,GAAG,CAACa,GAAG,CAACL,QAAQ,CAAC,IAAMC,QAAQ,GAAG,CAAC,IAAIH,GAAG,CAACO,GAAG,CAACJ,QAAQ,CAAE,IAAKC,QAAQ,GAAG,CAAC,IAAIH,GAAG,CAACM,GAAG,CAACH,QAAQ,CAAE,EAAE;UACrH,OAAO,gBAAgB;QACzB;QACA;QACAV,GAAG,CAACc,GAAG,CAACN,QAAQ,CAAC;QACjBF,GAAG,CAACQ,GAAG,CAACL,QAAQ,CAAC;QACjBF,GAAG,CAACO,GAAG,CAACJ,QAAQ,CAAC;MACnB;IACF;IACA;IACA,OAAO,cAAc;EACvB,CAAC;EACD;EACA,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxBC,KAAK,CAACZ,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,oBACEvB,OAAA;IAAKoC,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBrC,OAAA;MAAOoC,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACvBrC,OAAA;QAAAqC,QAAA,EACGlC,IAAI,CAACe,GAAG,CAAC,CAACC,GAAG,EAAET,CAAC,kBACfV,OAAA;UAAAqC,QAAA,EACGlB,GAAG,CAACD,GAAG,CAAC,CAACN,KAAK,EAAED,CAAC,kBAChBX,OAAA;YAAAqC,QAAA,eACErC,OAAA;cACEsC,IAAI,EAAC,MAAM;cACX1B,KAAK,EAAEA,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,KAAM;cAChC2B,QAAQ,EAAG9B,KAAK,IAAKD,iBAAiB,CAACC,KAAK,EAAEC,CAAC,EAAEC,CAAC;YAAE;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrD;UAAC,GALKhC,CAAC;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMN,CACL;QAAC,GATKjC,CAAC;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUN,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACR3C,OAAA;MAAQ4C,OAAO,EAAEV,WAAY;MAAAG,QAAA,EAAC;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV;AAACzC,EAAA,CA/EQD,UAAU;AAAA4C,EAAA,GAAV5C,UAAU;AAiFnB,eAAeA,UAAU;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
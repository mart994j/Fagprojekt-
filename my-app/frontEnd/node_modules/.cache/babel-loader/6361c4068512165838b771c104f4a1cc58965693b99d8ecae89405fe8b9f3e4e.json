{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\OneDrive\\\\Skrivebord\\\\Fagprojekt\\\\Fagprojekt-\\\\my-app\\\\frontEnd\\\\src\\\\SudokuView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './SudokuView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SudokuView() {\n  _s();\n  const [grid, setGrid] = useState([]);\n  const [validity, setValidity] = useState(Array(9).fill().map(() => Array(9).fill(true)));\n\n  //sætter editableCells til at være et tomt array\n  const [editableCells, setEditableCells] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3001/generate').then(response => response.json()).then(data => {\n      setGrid(data.board);\n      // Initialize editableCells based on whether the cell value is 0\n      const editable = data.board.map(row => row.map(value => value === 0));\n      setEditableCells(editable);\n    }).catch(error => console.error('Error fetching data: ', error));\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:3001/validate').then(response => response.json()).then(data1 => {\n      setValidity(data1.validate);\n    }).catch(error => console.error('Error fetching data: ', error));\n  }, []);\n  const handleInputChange = (event, i, j) => {\n    if (!editableCells[i][j]) {\n      // hvis cellen ikke er redigerbar, gør intet\n      return;\n    }\n    const value = event.target.value;\n    if (value === '' || /^\\d+$/.test(value) && value >= 1 && value <= 9) {\n      const numValue = value === '' ? 0 : parseInt(value, 10); // convert to number\n\n      const newGrid = grid.map((row, rowIndex) => row.map((cell, cellIndex) => rowIndex === i && cellIndex === j ? numValue : cell));\n      setGrid(newGrid);\n    }\n    // if the input is not a number between 1 and 9, do nothing\n  };\n\n  // tjek om sudoku er valid\n  const checkSudoku = () => {\n    if (validity === true) {\n      alert(\"Valid\"); // Show alert with result\n    } else {\n      alert(\"Invalid\"); // Show alert with result\n    }\n  };\n  useEffect(() => {\n    // Perform actions that depend on the updated validity state here\n    console.log('Validity state updated', validity);\n\n    // Example: Check if the entire grid is valid and do something\n    const isEntireGridValid = validity.every(row => row.every(cell => cell));\n    if (isEntireGridValid) {\n      console.log('The entire grid is valid!');\n      // Perform additional actions here\n    }\n  }, [validity]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SudokuView\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: grid.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((value, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: !validity[i][j] ? 'invalid' : '',\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: !validity[i][j] ? 'invalid-input' : '',\n              value: value === 0 ? '' : value,\n              onChange: event => handleInputChange(event, i, j),\n              readOnly: !editableCells[i][j] // Gør inputfeltet ikke-redigerbart, hvis cellen ikke er redigerbar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this)\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-blue\",\n      onClick: checkSudoku,\n      children: \"Check Sudoku\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(SudokuView, \"Xp3hz0kfl8+3/lzRm/Zgs9sXDR0=\");\n_c = SudokuView;\nexport default SudokuView;\nvar _c;\n$RefreshReg$(_c, \"SudokuView\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SudokuView","_s","grid","setGrid","validity","setValidity","Array","fill","map","editableCells","setEditableCells","fetch","then","response","json","data","board","editable","row","value","catch","error","console","data1","validate","handleInputChange","event","i","j","target","test","numValue","parseInt","newGrid","rowIndex","cell","cellIndex","checkSudoku","alert","log","isEntireGridValid","every","className","children","type","onChange","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/marti/OneDrive/Skrivebord/Fagprojekt/Fagprojekt-/my-app/frontEnd/src/SudokuView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './SudokuView.css';\r\n\r\nfunction SudokuView() {\r\n  const [grid, setGrid] = useState([]);\r\n  const [validity, setValidity] = useState(Array(9).fill().map(() => Array(9).fill(true)));\r\n\r\n  //sætter editableCells til at være et tomt array\r\n  const [editableCells, setEditableCells] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:3001/generate')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setGrid(data.board);\r\n        // Initialize editableCells based on whether the cell value is 0\r\n        const editable = data.board.map(row => row.map(value => value === 0));\r\n        setEditableCells(editable);\r\n      })\r\n      .catch(error => console.error('Error fetching data: ', error));\r\n  }, []  \r\n  );\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:3001/validate')\r\n      .then(response => response.json())\r\n      .then(data1 => {\r\n        setValidity(data1.validate);\r\n      })\r\n      .catch(error => console.error('Error fetching data: ', error));\r\n  }, []\r\n  );\r\n\r\n\r\n  const handleInputChange = (event, i, j) => {\r\n    if (!editableCells[i][j]) {\r\n      // hvis cellen ikke er redigerbar, gør intet\r\n      return;\r\n    }\r\n    const value = event.target.value;\r\n    if (value === '' || (/^\\d+$/.test(value) && value >= 1 && value <= 9)) {\r\n      const numValue = value === '' ? 0 : parseInt(value, 10); // convert to number\r\n  \r\n      const newGrid = grid.map((row, rowIndex) =>\r\n        row.map((cell, cellIndex) =>\r\n          rowIndex === i && cellIndex === j ? numValue : cell\r\n        )\r\n      );\r\n  \r\n      setGrid(newGrid);\r\n    }\r\n    // if the input is not a number between 1 and 9, do nothing\r\n  };\r\n  \r\n  // tjek om sudoku er valid\r\nconst checkSudoku = () => {\r\n  if (validity === true) {\r\n    alert(\"Valid\"); // Show alert with result\r\n  } else {\r\n    alert(\"Invalid\"); // Show alert with result\r\n  }\r\n};\r\n  \r\n\r\nuseEffect(() => {\r\n  // Perform actions that depend on the updated validity state here\r\n  console.log('Validity state updated', validity);\r\n\r\n  // Example: Check if the entire grid is valid and do something\r\n  const isEntireGridValid = validity.every(row => row.every(cell => cell));\r\n  if (isEntireGridValid) {\r\n    console.log('The entire grid is valid!');\r\n    // Perform additional actions here\r\n  }\r\n}, [validity]);\r\n\r\n  return (\r\n    <div className=\"SudokuView\">\r\n      <table className=\"center\">\r\n        <tbody>\r\n          {grid.map((row, i) => (\r\n            <tr key={i}>\r\n              {row.map((value, j) => (\r\n                <td key={j} className={!validity[i][j] ? 'invalid' : ''}>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={!validity[i][j] ? 'invalid-input' : ''}\r\n                    value={value === 0 ? '' : value}\r\n                    onChange={(event) => handleInputChange(event, i, j)}\r\n                    readOnly={!editableCells[i][j]} // Gør inputfeltet ikke-redigerbart, hvis cellen ikke er redigerbar\r\n                  />\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n  \r\n      <button\r\n        className=\"button-blue\"\r\n        onClick={checkSudoku}>\r\n  \r\n          Check Sudoku\r\n        \r\n        </button>\r\n  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SudokuView;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
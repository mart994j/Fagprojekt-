{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianwulf-andersen/Documents/Fagprojekt-/my-app/frontEnd/src/SudokuView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './SudokuView.css';\nimport { isValidSudoku } from './sudokuUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SudokuView() {\n  _s();\n  const [grid, setGrid] = useState([]);\n  const [validity, setValidity] = useState(Array(9).fill().map(() => Array(9).fill(true)));\n\n  //sætter editableCells til at være et tomt array\n  const [editableCells, setEditableCells] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/generate').then(response => response.json()).then(data => {\n      setGrid(data.board);\n      // Initialize editableCells based on whether the cell value is 0\n      const editable = data.board.map(row => row.map(value => value === 0));\n      setEditableCells(editable);\n    }).catch(error => console.error('Error fetching data: ', error));\n  }, []);\n  useEffect(() => {\n    const checkSudoku = () => {\n      const {\n        isValid,\n        newValidity\n      } = isValidSudoku(grid);\n      setValidity(newValidity);\n      const isFullyFilled = grid.every(row => row.every(value => value !== 0));\n      if (isValid && isFullyFilled) {\n        alert(\"Congratulations! You've solved the Sudoku!\");\n      }\n    };\n    checkSudoku();\n  }, [grid]); // Only grid in the dependency array\n\n  const handleInputChange = (event, i, j) => {\n    if (!editableCells[i][j]) {\n      // hvis cellen ikke er redigerbar, gør intet\n      return;\n    }\n    const value = event.target.value;\n    if (value === '' || /^\\d+$/.test(value) && value >= 1 && value <= 9) {\n      const numValue = value === '' ? 0 : parseInt(value, 10); // convert to number\n\n      const newGrid = grid.map((row, rowIndex) => row.map((cell, cellIndex) => rowIndex === i && cellIndex === j ? numValue : cell));\n      setGrid(newGrid);\n    }\n    //hvis input ikke er gyldigt, gør intet og returner tilbage til inputfeltet og \n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SudokuView\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: grid.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((value, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: !validity[i][j] ? 'invalid' : '',\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: !validity[i][j] ? 'invalid-input' : '',\n              value: value === 0 ? '' : value,\n              onChange: event => handleInputChange(event, i, j),\n              readOnly: !editableCells[i][j] // Gør inputfeltet ikke-redigerbart, hvis cellen ikke er redigerbar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this)\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(SudokuView, \"vNRPCu+w+vbdnRN8pQyNCbyRV8s=\");\n_c = SudokuView;\nexport default SudokuView;\nvar _c;\n$RefreshReg$(_c, \"SudokuView\");","map":{"version":3,"names":["React","useState","useEffect","isValidSudoku","jsxDEV","_jsxDEV","SudokuView","_s","grid","setGrid","validity","setValidity","Array","fill","map","editableCells","setEditableCells","fetch","then","response","json","data","board","editable","row","value","catch","error","console","checkSudoku","isValid","newValidity","isFullyFilled","every","alert","handleInputChange","event","i","j","target","test","numValue","parseInt","newGrid","rowIndex","cell","cellIndex","className","children","type","onChange","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sebastianwulf-andersen/Documents/Fagprojekt-/my-app/frontEnd/src/SudokuView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './SudokuView.css';\nimport { isValidSudoku } from './sudokuUtils';\n\n\n\n\nfunction SudokuView() {\n  const [grid, setGrid] = useState([]);\n  const [validity, setValidity] = useState(Array(9).fill().map(() => Array(9).fill(true)));\n\n  //sætter editableCells til at være et tomt array\n  const [editableCells, setEditableCells] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:3000/generate')\n      .then(response => response.json())\n      .then(data => {\n        setGrid(data.board);\n        // Initialize editableCells based on whether the cell value is 0\n        const editable = data.board.map(row => row.map(value => value === 0));\n        setEditableCells(editable);\n      })\n      .catch(error => console.error('Error fetching data: ', error));\n  }, []);\n\n  useEffect(() => {\n    const checkSudoku = () => {\n      const { isValid, newValidity } = isValidSudoku(grid);\n      setValidity(newValidity);\n      const isFullyFilled = grid.every(row => row.every(value => value !== 0));\n      if (isValid && isFullyFilled) {\n        alert(\"Congratulations! You've solved the Sudoku!\");\n      }\n    };\n    \n    checkSudoku();\n  }, [grid]); // Only grid in the dependency array\n\n\n  const handleInputChange = (event, i, j) => {\n    if (!editableCells[i][j]) {\n      // hvis cellen ikke er redigerbar, gør intet\n      return;\n    }\n    const value = event.target.value;\n    if (value === '' || (/^\\d+$/.test(value) && value >= 1 && value <= 9)) {\n      const numValue = value === '' ? 0 : parseInt(value, 10); // convert to number\n  \n      const newGrid = grid.map((row, rowIndex) =>\n        row.map((cell, cellIndex) =>\n          rowIndex === i && cellIndex === j ? numValue : cell\n        )\n      );\n  \n      setGrid(newGrid);\n   \n    }\n    //hvis input ikke er gyldigt, gør intet og returner tilbage til inputfeltet og \n  };\n  \n\n\n  return (\n    <div className=\"SudokuView\">\n      <table className=\"center\">\n        <tbody>\n          {grid.map((row, i) => (\n            <tr key={i}>\n              {row.map((value, j) => (\n                <td key={j} className={!validity[i][j] ? 'invalid' : ''}>\n                  <input\n                    type=\"text\"\n                    className={!validity[i][j] ? 'invalid-input' : ''}\n                    value={value === 0 ? '' : value}\n                    onChange={(event) => handleInputChange(event, i, j)}\n                    readOnly={!editableCells[i][j]} // Gør inputfeltet ikke-redigerbart, hvis cellen ikke er redigerbar\n                  />\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n  \n     \n  \n    </div>\n  );\n}\n\nexport default SudokuView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
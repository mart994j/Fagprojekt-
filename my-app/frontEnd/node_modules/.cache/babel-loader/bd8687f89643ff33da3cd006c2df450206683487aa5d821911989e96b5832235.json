{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianwulf-andersen/Documents/Fagprojekt-/my-app/frontEnd/src/Views/SudokuView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useContext, useRef } from 'react';\nimport './CSS/SudokuView.css';\nimport { isValidSudoku } from '../sudokuUtils';\nimport { fetchNewBoard } from '../fetchNewBoard';\nimport { FaPencilAlt } from 'react-icons/fa';\nimport UserContext from '../UserContext';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SudokuView() {\n  _s();\n  var _location$state2;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [n, setN] = useState(9); // Initialiserer n med en standardværdi eller fallback værdi\n  const [grid, setGrid] = useState([]);\n  const [validity, setValidity] = useState(Array(n).fill().map(() => Array(n).fill(true)));\n  const [userEdits, setUserEdits] = useState(Array(n).fill().map(() => Array(n).fill(false)));\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\n  const [editableCells, setEditableCells] = useState([]);\n  const [timer, setTimer] = useState(0);\n  const isTimerActiveRef = useRef(false);\n  const {\n    username\n  } = useContext(UserContext);\n  const [isNotesMode, setIsNotesMode] = useState(false);\n  const [notes, setNotes] = useState(Array(n).fill().map(() => Array(n).fill([])));\n  const [isClear, setIsClear] = useState(false);\n  useEffect(() => {\n    // Initialize or re-initialize notes when n changes\n    setNotes(Array(n).fill().map(() => Array(n).fill([])));\n  }, [n]); // Dependency on n\n  //hej\n  // Henter et nyt board fra serveren \n  useEffect(() => {\n    var _location$state;\n    const n = (_location$state = location.state) !== null && _location$state !== void 0 && _location$state.n ? location.state.n : 9; // Fallback til 9 som standard størrelse\n    setN(n);\n    fetchNewBoard({\n      n,\n      setGrid,\n      setEditableCells,\n      setUserEdits,\n      setValidity,\n      setIsDataLoaded,\n      setTimer,\n      setIsTimerActive: isTimerActiveRef.current ? () => {} : startTimer\n    });\n  }, [(_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.n]);\n\n  // Timer logik \n  const startTimer = () => {\n    if (!isTimerActiveRef.current) {\n      isTimerActiveRef.current = true;\n      const interval = setInterval(() => {\n        if (isTimerActiveRef.current) {\n          setTimer(prevTimer => prevTimer + 1);\n        } else {\n          clearInterval(interval);\n        }\n      }, 1000);\n    }\n  };\n\n  // Stop timer-funktion\n  const stopTimer = () => {\n    isTimerActiveRef.current = false;\n  };\n\n  // Håndterer input fra brugeren\n  const handleInputChange = useCallback((event, i, j) => {\n    if (!editableCells[i][j]) {\n      return;\n    }\n    setSelectedCell({\n      row: i,\n      col: j\n    });\n    const value = event.target.value;\n    if (isNotesMode) {\n      // Handle note input\n      const noteValue = parseInt(value, 10);\n      const updatedNotes = [...notes];\n      if (value === '') {\n        updatedNotes[i][j] = []; // Clear notes if input is empty\n      } else if (/^\\d+$/.test(value) && value >= 1 && value <= n) {\n        if (updatedNotes[i][j].includes(noteValue)) {\n          // If the note is already present, remove it\n          updatedNotes[i][j] = updatedNotes[i][j].filter(note => note !== noteValue);\n        } else {\n          // Add note if it's a valid number and not already present\n          updatedNotes[i][j] = [...new Set([...updatedNotes[i][j], noteValue])]; // This also prevents duplicate notes\n        }\n      }\n      setNotes(updatedNotes);\n    } else {\n      // Existing logic for handling value input\n      if (value === '' || /^\\d+$/.test(value) && value >= 1 && value <= n) {\n        const numValue = value === '' ? 0 : parseInt(value, 10);\n        const newGrid = grid.map((row, rowIndex) => row.map((cell, cellIndex) => rowIndex === i && cellIndex === j ? numValue : cell));\n        const updatedNotes = [...notes]; // Prepare to potentially clear notes\n        if (numValue !== 0) {\n          // If a valid number is placed, clear the notes for this cell\n          updatedNotes[i][j] = [];\n        }\n        setGrid(newGrid);\n        setNotes(updatedNotes); // Update notes state to reflect changes\n\n        const newUserEdits = [...userEdits];\n        newUserEdits[i][j] = true;\n        setUserEdits(newUserEdits);\n      }\n    }\n    stopTimer();\n  }, [editableCells, grid, userEdits, notes, n, isNotesMode]);\n  function getUserLocation(callback) {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        callback(latitude, longitude);\n      }, error => {\n        console.error(\"Geolocation error:\", error);\n        callback(null, null); // Håndter fejl eller ingen tilladelse\n      });\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n      callback(null, null); // Håndter unsupported browser\n    }\n  }\n  const submitScore = useCallback((username, time) => {\n    getUserLocation((latitude, longitude) => {\n      const location = {\n        lat: latitude,\n        lng: longitude\n      };\n      console.log({\n        username,\n        time,\n        location\n      }); // Debugging\n      fetch('http://localhost:3000/submit', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          time,\n          location\n        })\n      }).then(response => response.json()).then(data => {\n        console.log('Score submitted:', data);\n        // Opdater UI eller state her baseret på svaret, hvis nødvendigt\n      }).catch(error => console.error('Error submitting score:', error));\n    });\n  }, []);\n\n  // Tjekker om Sudoku er løst\n  const checkSudoku = useCallback(() => {\n    if (!isDataLoaded) return;\n    const {\n      isValid,\n      newValidity\n    } = isValidSudoku(grid);\n    setValidity(newValidity);\n    // Tjekker om brættet er fuldt udfyldt og gyldigt\n    const isFullyFilled = grid.every(row => row.every(value => value !== 0));\n    if (isValid && isFullyFilled) {\n      alert(`Congratulations! You've solved the Sudoku in ${timer} seconds!`);\n      stopTimer();\n      submitScore(username, timer);\n      navigate('/');\n    }\n  }, [grid, isDataLoaded, timer, username, navigate, submitScore]);\n  useEffect(() => {\n    if (isDataLoaded) {\n      checkSudoku();\n    }\n  }, [grid, isDataLoaded, checkSudoku]);\n  useEffect(() => {\n    return () => {\n      isTimerActiveRef.current = false; // Sørg for at timeren stopper, når komponenten unmounts\n    };\n  }, []);\n\n  // Calculate the square root of n to determine subgrid size\n  const subGridSize = Math.sqrt(n);\n  const baseSize = 500; // Base size for the Sudoku board\n  const cellSize = baseSize / n;\n  const fontSize = Math.max(12, cellSize / 3); // Adjust this formula as needed\n\n  // Modify the return statement in your SudokuView component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SudokuView\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sudoku\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [\"Timer: \", timer, \" sekunder\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginLeft: '90px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"center\",\n        style: {\n          width: baseSize + 'px',\n          height: baseSize + 'px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: grid.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: row.map((value, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: `${!validity[i][j] ? 'invalid' : ''} ` + `${(j + 1) % subGridSize === 0 && j + 1 !== n ? 'right-border' : ''} ` + `${(i + 1) % subGridSize === 0 && i + 1 !== n ? 'bottom-border' : ''}`,\n              style: {\n                width: cellSize + 'px',\n                height: cellSize + 'px',\n                position: 'relative'\n              },\n              children: [notes[i][j].length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"notes\",\n                style: {\n                  fontSize: '10px'\n                },\n                children: notes[i][j].join(', ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 23\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: `${!validity[i][j] ? 'invalid-input' : ''} ${userEdits[i][j] ? 'user-input' : ''}`,\n                value: value === 0 ? '' : value,\n                onChange: event => handleInputChange(event, i, j),\n                readOnly: !editableCells[i][j],\n                style: {\n                  fontSize: `${fontSize}px`,\n                  position: 'absolute',\n                  top: 0,\n                  left: 0,\n                  width: '100%',\n                  height: '100%',\n                  zIndex: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 21\n              }, this)]\n            }, j, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this))\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsNotesMode(!isNotesMode),\n          style: {\n            padding: '5px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            border: 'none',\n            background: 'none',\n            color: 'white'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FaPencilAlt, {\n            size: \"24px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: isNotesMode ? 'Disable Notes' : 'Enable Notes'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsClear(!isClear),\n          style: {\n            padding: '5px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            border: 'none',\n            background: 'none',\n            color: 'white'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FaPencilAlt, {\n            size: \"24px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: 'Clear'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n_s(SudokuView, \"W8d6oQH5wkkIeLn0pZ/dFLS0P54=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = SudokuView;\nexport default SudokuView;\nvar _c;\n$RefreshReg$(_c, \"SudokuView\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useContext","useRef","isValidSudoku","fetchNewBoard","FaPencilAlt","UserContext","useLocation","useNavigate","jsxDEV","_jsxDEV","SudokuView","_s","_location$state2","location","navigate","n","setN","grid","setGrid","validity","setValidity","Array","fill","map","userEdits","setUserEdits","isDataLoaded","setIsDataLoaded","editableCells","setEditableCells","timer","setTimer","isTimerActiveRef","username","isNotesMode","setIsNotesMode","notes","setNotes","isClear","setIsClear","_location$state","state","setIsTimerActive","current","startTimer","interval","setInterval","prevTimer","clearInterval","stopTimer","handleInputChange","event","i","j","setSelectedCell","row","col","value","target","noteValue","parseInt","updatedNotes","test","includes","filter","note","Set","numValue","newGrid","rowIndex","cell","cellIndex","newUserEdits","getUserLocation","callback","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","error","console","log","submitScore","time","lat","lng","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","checkSudoku","isValid","newValidity","isFullyFilled","every","alert","subGridSize","Math","sqrt","baseSize","cellSize","fontSize","max","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexDirection","alignItems","marginLeft","width","height","length","join","type","onChange","readOnly","top","left","zIndex","onClick","padding","border","background","color","size","_c","$RefreshReg$"],"sources":["/Users/sebastianwulf-andersen/Documents/Fagprojekt-/my-app/frontEnd/src/Views/SudokuView.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useContext, useRef } from 'react';\nimport './CSS/SudokuView.css';\nimport { isValidSudoku } from '../sudokuUtils';\nimport { fetchNewBoard } from '../fetchNewBoard';\nimport { FaPencilAlt } from 'react-icons/fa';\nimport UserContext from '../UserContext';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\n\nfunction SudokuView() {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const [n, setN] = useState(9); // Initialiserer n med en standardværdi eller fallback værdi\n  const [grid, setGrid] = useState([]);\n\n  const [validity, setValidity] = useState(Array(n).fill().map(() => Array(n).fill(true)));\n  const [userEdits, setUserEdits] = useState(Array(n).fill().map(() => Array(n).fill(false)));\n\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\n  const [editableCells, setEditableCells] = useState([]);\n  const [timer, setTimer] = useState(0);\n  const isTimerActiveRef = useRef(false);\n  const { username } = useContext(UserContext);\n  const [isNotesMode, setIsNotesMode] = useState(false);\n  const [notes, setNotes] = useState(Array(n).fill().map(() => Array(n).fill([])));\n  const [isClear, setIsClear] = useState(false);\n\n\n  useEffect(() => {\n    // Initialize or re-initialize notes when n changes\n    setNotes(Array(n).fill().map(() => Array(n).fill([])));\n  }, [n]); // Dependency on n\n  //hej\n  // Henter et nyt board fra serveren \n  useEffect(() => {\n    const n = location.state?.n ? location.state.n : 9; // Fallback til 9 som standard størrelse\n    setN(n);\n    fetchNewBoard({\n      n,\n      setGrid,\n      setEditableCells,\n      setUserEdits,\n      setValidity,\n      setIsDataLoaded,\n      setTimer,\n      setIsTimerActive: isTimerActiveRef.current ? () => { } : startTimer,\n    });\n  }, [location.state?.n]);\n\n  // Timer logik \n  const startTimer = () => {\n    if (!isTimerActiveRef.current) {\n      isTimerActiveRef.current = true;\n      const interval = setInterval(() => {\n        if (isTimerActiveRef.current) {\n          setTimer((prevTimer) => prevTimer + 1);\n        } else {\n          clearInterval(interval);\n        }\n      }, 1000);\n    }\n  };\n\n  // Stop timer-funktion\n  const stopTimer = () => {\n    isTimerActiveRef.current = false;\n  };\n\n  // Håndterer input fra brugeren\n  const handleInputChange = useCallback((event, i, j) => {\n    if (!editableCells[i][j]) {\n      return;\n    }\n    setSelectedCell({ row: i, col: j });\n    const value = event.target.value;\n\n    if (isNotesMode) {\n      // Handle note input\n      const noteValue = parseInt(value, 10);\n      const updatedNotes = [...notes];\n      if (value === '') {\n        updatedNotes[i][j] = []; // Clear notes if input is empty\n      } else if (/^\\d+$/.test(value) && value >= 1 && value <= n) {\n        if (updatedNotes[i][j].includes(noteValue)) {\n          // If the note is already present, remove it\n          updatedNotes[i][j] = updatedNotes[i][j].filter(note => note !== noteValue);\n        } else {\n          // Add note if it's a valid number and not already present\n          updatedNotes[i][j] = [...new Set([...updatedNotes[i][j], noteValue])]; // This also prevents duplicate notes\n        }\n      }\n      setNotes(updatedNotes);\n    } else {\n      // Existing logic for handling value input\n      if (value === '' || (/^\\d+$/.test(value) && value >= 1 && value <= n)) {\n        const numValue = value === '' ? 0 : parseInt(value, 10);\n        const newGrid = grid.map((row, rowIndex) =>\n          row.map((cell, cellIndex) => rowIndex === i && cellIndex === j ? numValue : cell)\n        );\n\n        const updatedNotes = [...notes]; // Prepare to potentially clear notes\n        if (numValue !== 0) {\n          // If a valid number is placed, clear the notes for this cell\n          updatedNotes[i][j] = [];\n        }\n\n       \n\n        setGrid(newGrid);\n        setNotes(updatedNotes); // Update notes state to reflect changes\n\n        const newUserEdits = [...userEdits];\n        newUserEdits[i][j] = true;\n        setUserEdits(newUserEdits);\n      }\n    }\n    stopTimer();\n  }, [editableCells, grid, userEdits, notes, n, isNotesMode]);\n\n \n\n\n  function getUserLocation(callback) {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          callback(latitude, longitude);\n        },\n        (error) => {\n          console.error(\"Geolocation error:\", error);\n          callback(null, null); // Håndter fejl eller ingen tilladelse\n        }\n      );\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n      callback(null, null); // Håndter unsupported browser\n    }\n  }\n  const submitScore = useCallback((username, time) => {\n    getUserLocation((latitude, longitude) => {\n      const location = { lat: latitude, lng: longitude };\n      console.log({ username, time, location }); // Debugging\n      fetch('http://localhost:3000/submit', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username,\n          time,\n          location,\n        }),\n      })\n        .then(response => response.json())\n        .then(data => {\n          console.log('Score submitted:', data);\n          // Opdater UI eller state her baseret på svaret, hvis nødvendigt\n        })\n        .catch(error => console.error('Error submitting score:', error));\n    });\n  }, []);\n\n\n\n\n  // Tjekker om Sudoku er løst\n  const checkSudoku = useCallback(() => {\n    if (!isDataLoaded) return;\n    const { isValid, newValidity } = isValidSudoku(grid);\n    setValidity(newValidity);\n    // Tjekker om brættet er fuldt udfyldt og gyldigt\n    const isFullyFilled = grid.every(row => row.every(value => value !== 0));\n    if (isValid && isFullyFilled) {\n      alert(`Congratulations! You've solved the Sudoku in ${timer} seconds!`);\n      stopTimer();\n      submitScore(username, timer);\n      navigate('/');\n\n    }\n  }, [grid, isDataLoaded, timer, username, navigate, submitScore]);\n\n  useEffect(() => {\n    if (isDataLoaded) {\n      checkSudoku();\n    }\n  }, [grid, isDataLoaded, checkSudoku]);\n\n\n\n\n  useEffect(() => {\n    return () => {\n      isTimerActiveRef.current = false; // Sørg for at timeren stopper, når komponenten unmounts\n    };\n  }, []);\n\n  // Calculate the square root of n to determine subgrid size\n  const subGridSize = Math.sqrt(n);\n  const baseSize = 500; // Base size for the Sudoku board\n  const cellSize = baseSize / n;\n  const fontSize = Math.max(12, cellSize / 3); // Adjust this formula as needed\n\n  // Modify the return statement in your SudokuView component\n  return (\n    <div className=\"SudokuView\">\n      <h1>Sudoku</h1>\n      <div className=\"timer\">Timer: {timer} sekunder</div>\n      <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', marginLeft: '90px' }}>\n        <table className=\"center\" style={{ width: baseSize + 'px', height: baseSize + 'px' }}>\n          <tbody>\n            {grid.map((row, i) => (\n              <tr key={i}>\n                {row.map((value, j) => (\n                  <td\n                    key={j}\n                    className={\n                      `${!validity[i][j] ? 'invalid' : ''} ` +\n                      `${(j + 1) % subGridSize === 0 && j + 1 !== n ? 'right-border' : ''} ` +\n                      `${(i + 1) % subGridSize === 0 && i + 1 !== n ? 'bottom-border' : ''}`\n                    }\n                    style={{ width: cellSize + 'px', height: cellSize + 'px', position: 'relative' }}\n                  >\n                    {notes[i][j].length > 0 ? (\n                      <div className=\"notes\" style={{ fontSize: '10px' }}>{notes[i][j].join(', ')}</div>\n                    ) : null}\n                    <input\n                      type=\"text\"\n                      className={`${!validity[i][j] ? 'invalid-input' : ''} ${userEdits[i][j] ? 'user-input' : ''}`}\n                      value={value === 0 ? '' : value}\n                      onChange={(event) => handleInputChange(event, i, j)}\n                      readOnly={!editableCells[i][j]}\n                      style={{ fontSize: `${fontSize}px`, position: 'absolute', top: 0, left: 0, width: '100%', height: '100%', zIndex: 1 }}\n                    />\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n          <button onClick={() => setIsNotesMode(!isNotesMode)} style={{ padding: '5px', display: 'flex', flexDirection: 'column', alignItems: 'center', border: 'none', background: 'none', color: 'white' }}>\n            <FaPencilAlt size=\"24px\" />\n            <span>{isNotesMode ? 'Disable Notes' : 'Enable Notes'}</span>\n          </button>\n          <button onClick={() => setIsClear(!isClear)} style={{ padding: '5px', display: 'flex', flexDirection: 'column', alignItems: 'center', border: 'none', background: 'none', color: 'white' }}>\n            <FaPencilAlt size=\"24px\" />\n            <span>{'Clear'}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n}\n\nexport default SudokuView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
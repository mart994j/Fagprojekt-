{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\OneDrive\\\\Skrivebord\\\\Fagprojekt\\\\Fagprojekt-\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Initialize a 9x9 grid with all zeros\n  const [grid, setGrid] = useState(Array(9).fill().map(() => Array(9).fill(0)));\n  const handleInputChange = (event, i, j) => {\n    const value = event.target.value;\n\n    // Create a new grid with the updated value\n    const newGrid = grid.map((row, rowIndex) => row.map((cell, cellIndex) => rowIndex === i && cellIndex === j ? value : cell));\n    setGrid(newGrid);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: grid.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((value, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: value === 0 ? '' : value,\n              onChange: event => handleInputChange(event, i, j)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, this)\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UO9kEDCEyivSzr35DDcnp68a9bM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","grid","setGrid","Array","fill","map","handleInputChange","event","i","j","value","target","newGrid","row","rowIndex","cell","cellIndex","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/marti/OneDrive/Skrivebord/Fagprojekt/Fagprojekt-/my-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  // Initialize a 9x9 grid with all zeros\n  const [grid, setGrid] = useState(Array(9).fill().map(() => Array(9).fill(0)));\n\n  const handleInputChange = (event, i, j) => {\n    const value = event.target.value;\n\n    // Create a new grid with the updated value\n    const newGrid = grid.map((row, rowIndex) => \n      row.map((cell, cellIndex) => \n        rowIndex === i && cellIndex === j ? value : cell\n      )\n    );\n\n    setGrid(newGrid);\n  };\n\n  return (\n    <div className=\"App\">\n      <table className=\"center\">\n        <tbody>\n          {grid.map((row, i) => (\n            <tr key={i}>\n              {row.map((value, j) => (\n                <td key={j}>\n                  <input \n                    type=\"text\" \n                    value={value === 0 ? '' : value} \n                    onChange={event => handleInputChange(event, i, j)} \n                  />\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAACO,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,MAAMF,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAE7E,MAAME,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,CAAC,EAAEC,CAAC,KAAK;IACzC,MAAMC,KAAK,GAAGH,KAAK,CAACI,MAAM,CAACD,KAAK;;IAEhC;IACA,MAAME,OAAO,GAAGX,IAAI,CAACI,GAAG,CAAC,CAACQ,GAAG,EAAEC,QAAQ,KACrCD,GAAG,CAACR,GAAG,CAAC,CAACU,IAAI,EAAEC,SAAS,KACtBF,QAAQ,KAAKN,CAAC,IAAIQ,SAAS,KAAKP,CAAC,GAAGC,KAAK,GAAGK,IAC9C,CACF,CAAC;IAEDb,OAAO,CAACU,OAAO,CAAC;EAClB,CAAC;EAED,oBACEd,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBpB,OAAA;MAAOmB,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACvBpB,OAAA;QAAAoB,QAAA,EACGjB,IAAI,CAACI,GAAG,CAAC,CAACQ,GAAG,EAAEL,CAAC,kBACfV,OAAA;UAAAoB,QAAA,EACGL,GAAG,CAACR,GAAG,CAAC,CAACK,KAAK,EAAED,CAAC,kBAChBX,OAAA;YAAAoB,QAAA,eACEpB,OAAA;cACEqB,IAAI,EAAC,MAAM;cACXT,KAAK,EAAEA,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,KAAM;cAChCU,QAAQ,EAAEb,KAAK,IAAID,iBAAiB,CAACC,KAAK,EAAEC,CAAC,EAAEC,CAAC;YAAE;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnD;UAAC,GALKf,CAAC;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMN,CACL;QAAC,GATKhB,CAAC;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUN,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACxB,EAAA,CAtCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
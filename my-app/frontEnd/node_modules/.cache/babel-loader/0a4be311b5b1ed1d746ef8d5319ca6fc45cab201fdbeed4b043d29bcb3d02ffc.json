{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianwulf-andersen/Documents/Fagprojekt-/my-app/frontEnd/src/Views/SudokuView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useContext, useRef } from 'react';\nimport './CSS/SudokuView.css';\nimport { isValidSudoku } from '../sudokuUtils';\nimport { fetchNewBoard } from '../fetchNewBoard';\nimport UserContext from '../UserContext';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SudokuView() {\n  _s();\n  var _location$state2;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [n, setN] = useState(9); // Initialiserer n med en standardværdi eller fallback værdi\n  const [grid, setGrid] = useState([]);\n  const [validity, setValidity] = useState(Array(n).fill().map(() => Array(n).fill(true)));\n  const [userEdits, setUserEdits] = useState(Array(n).fill().map(() => Array(n).fill(false)));\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\n  const [editableCells, setEditableCells] = useState([]);\n  const [timer, setTimer] = useState(0);\n  const isTimerActiveRef = useRef(false);\n  const {\n    username\n  } = useContext(UserContext);\n\n  // Henter et nyt board fra serveren \n  useEffect(() => {\n    var _location$state;\n    const n = (_location$state = location.state) !== null && _location$state !== void 0 && _location$state.n ? location.state.n : 9; // Fallback til 9 som standard størrelse\n    setN(n);\n    fetchNewBoard({\n      n,\n      setGrid,\n      setEditableCells,\n      setUserEdits,\n      setValidity,\n      setIsDataLoaded,\n      setTimer,\n      setIsTimerActive: isTimerActiveRef.current ? () => {} : startTimer\n    });\n  }, [(_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.n]);\n\n  // Timer logik \n  const startTimer = () => {\n    if (!isTimerActiveRef.current) {\n      isTimerActiveRef.current = true;\n      const interval = setInterval(() => {\n        if (isTimerActiveRef.current) {\n          setTimer(prevTimer => prevTimer + 1);\n        } else {\n          clearInterval(interval);\n        }\n      }, 1000);\n    }\n  };\n\n  // Stop timer-funktion\n  const stopTimer = () => {\n    isTimerActiveRef.current = false;\n  };\n\n  // Håndterer input fra brugeren\n  const handleInputChange = useCallback((event, i, j) => {\n    if (!editableCells[i][j]) {\n      return;\n    }\n    const value = event.target.value;\n    if (isNotesMode) {\n      // Handle note input\n      const updatedNotes = [...notes];\n      if (value === '') {\n        updatedNotes[i][j] = []; // Clear notes if input is empty\n      } else if (/^\\d+$/.test(value) && value >= 1 && value <= n) {\n        // Add note if it's a valid number\n        updatedNotes[i][j] = [...new Set([...updatedNotes[i][j], parseInt(value, 10)])]; // Prevent duplicate notes\n      }\n      setNotes(updatedNotes);\n    } else {\n      // Existing logic for handling value input\n      if (value === '' || /^\\d+$/.test(value) && value >= 1 && value <= n) {\n        const numValue = value === '' ? 0 : parseInt(value, 10);\n        const newGrid = grid.map((row, rowIndex) => row.map((cell, cellIndex) => rowIndex === i && cellIndex === j ? numValue : cell));\n        setGrid(newGrid);\n        const newUserEdits = [...userEdits];\n        newUserEdits[i][j] = true;\n        setUserEdits(newUserEdits);\n      }\n    }\n    stopTimer();\n  }, [editableCells, grid, userEdits, n, isNotesMode, notes]);\n  function getUserLocation(callback) {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        callback(latitude, longitude);\n      }, error => {\n        console.error(\"Geolocation error:\", error);\n        callback(null, null); // Håndter fejl eller ingen tilladelse\n      });\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n      callback(null, null); // Håndter unsupported browser\n    }\n  }\n  const submitScore = useCallback((username, time) => {\n    getUserLocation((latitude, longitude) => {\n      const location = {\n        lat: latitude,\n        lng: longitude\n      };\n      console.log({\n        username,\n        time,\n        location\n      }); // Debugging\n      fetch('http://localhost:3000/submit', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          time,\n          location\n        })\n      }).then(response => response.json()).then(data => {\n        console.log('Score submitted:', data);\n        // Opdater UI eller state her baseret på svaret, hvis nødvendigt\n      }).catch(error => console.error('Error submitting score:', error));\n    });\n  }, []);\n\n  // Tjekker om Sudoku er løst\n  const checkSudoku = useCallback(() => {\n    if (!isDataLoaded) return;\n    const {\n      isValid,\n      newValidity\n    } = isValidSudoku(grid);\n    setValidity(newValidity);\n    // Tjekker om brættet er fuldt udfyldt og gyldigt\n    const isFullyFilled = grid.every(row => row.every(value => value !== 0));\n    if (isValid && isFullyFilled) {\n      alert(`Congratulations! You've solved the Sudoku in ${timer} seconds!`);\n      stopTimer();\n      submitScore(username, timer);\n      navigate('/');\n    }\n  }, [grid, isDataLoaded, timer, username, navigate, submitScore]);\n  useEffect(() => {\n    if (isDataLoaded) {\n      checkSudoku();\n    }\n  }, [grid, isDataLoaded, checkSudoku]);\n  useEffect(() => {\n    return () => {\n      isTimerActiveRef.current = false; // Sørg for at timeren stopper, når komponenten unmounts\n    };\n  }, []);\n\n  // Calculate the square root of n to determine subgrid size\n  const subGridSize = Math.sqrt(n);\n  const baseSize = 500; // Base size for the Sudoku board\n  const cellSize = baseSize / n;\n  const fontSize = Math.max(12, cellSize / 3); // Adjust this formula as needed\n\n  // Modify the return statement in your SudokuView component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SudokuView\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sudoku\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [\"Timer: \", timer, \" sekunder\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsNotesMode(!isNotesMode),\n      children: isNotesMode ? 'Disable Notes Mode' : 'Enable Notes Mode'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"center\",\n      style: {\n        width: baseSize + 'px',\n        height: baseSize + 'px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: grid.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((value, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `${!validity[i][j] ? 'invalid' : ''} ` + `${(j + 1) % subGridSize === 0 && j + 1 !== n ? 'right-border' : ''} ` + `${(i + 1) % subGridSize === 0 && i + 1 !== n ? 'bottom-border' : ''}`,\n            style: {\n              width: cellSize + 'px',\n              height: cellSize + 'px'\n            },\n            children: notes[i][j].length > 0 && isNotesMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notes\",\n              style: {\n                fontSize: fontSize + 'px'\n              },\n              children: notes[i][j].join(', ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: `${!validity[i][j] ? 'invalid-input' : ''} ${userEdits[i][j] ? 'user-input' : ''}`,\n              value: value === 0 ? '' : value,\n              onChange: event => handleInputChange(event, i, j),\n              readOnly: !editableCells[i][j],\n              style: {\n                fontSize: fontSize + 'px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 21\n            }, this)\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n_s(SudokuView, \"RwhLT8yTDDhSs1aDdgnTsDzZB6k=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = SudokuView;\nexport default SudokuView;\nvar _c;\n$RefreshReg$(_c, \"SudokuView\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useContext","useRef","isValidSudoku","fetchNewBoard","UserContext","useLocation","useNavigate","jsxDEV","_jsxDEV","SudokuView","_s","_location$state2","location","navigate","n","setN","grid","setGrid","validity","setValidity","Array","fill","map","userEdits","setUserEdits","isDataLoaded","setIsDataLoaded","editableCells","setEditableCells","timer","setTimer","isTimerActiveRef","username","_location$state","state","setIsTimerActive","current","startTimer","interval","setInterval","prevTimer","clearInterval","stopTimer","handleInputChange","event","i","j","value","target","isNotesMode","updatedNotes","notes","test","Set","parseInt","setNotes","numValue","newGrid","row","rowIndex","cell","cellIndex","newUserEdits","getUserLocation","callback","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","error","console","log","submitScore","time","lat","lng","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","checkSudoku","isValid","newValidity","isFullyFilled","every","alert","subGridSize","Math","sqrt","baseSize","cellSize","fontSize","max","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","setIsNotesMode","style","width","height","length","join","type","onChange","readOnly","_c","$RefreshReg$"],"sources":["/Users/sebastianwulf-andersen/Documents/Fagprojekt-/my-app/frontEnd/src/Views/SudokuView.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useContext, useRef } from 'react';\nimport './CSS/SudokuView.css';\nimport { isValidSudoku } from '../sudokuUtils';\nimport { fetchNewBoard } from '../fetchNewBoard';\nimport UserContext from '../UserContext';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\n\nfunction SudokuView() {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const [n, setN] = useState(9); // Initialiserer n med en standardværdi eller fallback værdi\n  const [grid, setGrid] = useState([]);\n\n  const [validity, setValidity] = useState(Array(n).fill().map(() => Array(n).fill(true)));\n  const [userEdits, setUserEdits] = useState(Array(n).fill().map(() => Array(n).fill(false)));\n\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\n  const [editableCells, setEditableCells] = useState([]);\n  const [timer, setTimer] = useState(0);\n  const isTimerActiveRef = useRef(false);\n  const { username } = useContext(UserContext);\n\n\n  // Henter et nyt board fra serveren \n  useEffect(() => {\n    const n = location.state?.n ? location.state.n : 9; // Fallback til 9 som standard størrelse\n    setN(n);\n    fetchNewBoard({\n      n,\n      setGrid,\n      setEditableCells,\n      setUserEdits,\n      setValidity,\n      setIsDataLoaded,\n      setTimer,\n      setIsTimerActive: isTimerActiveRef.current ? () => { } : startTimer,\n    });\n  }, [location.state?.n]);\n\n  // Timer logik \n  const startTimer = () => {\n    if (!isTimerActiveRef.current) {\n      isTimerActiveRef.current = true;\n      const interval = setInterval(() => {\n        if (isTimerActiveRef.current) {\n          setTimer((prevTimer) => prevTimer + 1);\n        } else {\n          clearInterval(interval);\n        }\n      }, 1000);\n    }\n  };\n\n  // Stop timer-funktion\n  const stopTimer = () => {\n    isTimerActiveRef.current = false;\n  };\n\n  // Håndterer input fra brugeren\n  const handleInputChange = useCallback((event, i, j) => {\n    if (!editableCells[i][j]) {\n      return;\n    }\n    const value = event.target.value;\n\n    if (isNotesMode) {\n      // Handle note input\n      const updatedNotes = [...notes];\n      if (value === '') {\n        updatedNotes[i][j] = []; // Clear notes if input is empty\n      } else if (/^\\d+$/.test(value) && value >= 1 && value <= n) {\n        // Add note if it's a valid number\n        updatedNotes[i][j] = [...new Set([...updatedNotes[i][j], parseInt(value, 10)])]; // Prevent duplicate notes\n      }\n      setNotes(updatedNotes);\n    } else {\n      // Existing logic for handling value input\n      if (value === '' || (/^\\d+$/.test(value) && value >= 1 && value <= n)) {\n        const numValue = value === '' ? 0 : parseInt(value, 10);\n        const newGrid = grid.map((row, rowIndex) =>\n          row.map((cell, cellIndex) => rowIndex === i && cellIndex === j ? numValue : cell)\n        );\n        setGrid(newGrid);\n\n        const newUserEdits = [...userEdits];\n        newUserEdits[i][j] = true;\n        setUserEdits(newUserEdits);\n      }\n    }\n    stopTimer();\n  }, [editableCells, grid, userEdits, n, isNotesMode, notes]);\n\n\n  function getUserLocation(callback) {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          callback(latitude, longitude);\n        },\n        (error) => {\n          console.error(\"Geolocation error:\", error);\n          callback(null, null); // Håndter fejl eller ingen tilladelse\n        }\n      );\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n      callback(null, null); // Håndter unsupported browser\n    }\n  }\n  const submitScore = useCallback((username, time) => {\n    getUserLocation((latitude, longitude) => {\n      const location = { lat: latitude, lng: longitude };\n      console.log({ username, time, location }); // Debugging\n      fetch('http://localhost:3000/submit', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username,\n          time,\n          location,\n        }),\n      })\n        .then(response => response.json())\n        .then(data => {\n          console.log('Score submitted:', data);\n          // Opdater UI eller state her baseret på svaret, hvis nødvendigt\n        })\n        .catch(error => console.error('Error submitting score:', error));\n    });\n  }, []);\n\n\n\n\n  // Tjekker om Sudoku er løst\n  const checkSudoku = useCallback(() => {\n    if (!isDataLoaded) return;\n    const { isValid, newValidity } = isValidSudoku(grid);\n    setValidity(newValidity);\n    // Tjekker om brættet er fuldt udfyldt og gyldigt\n    const isFullyFilled = grid.every(row => row.every(value => value !== 0));\n    if (isValid && isFullyFilled) {\n      alert(`Congratulations! You've solved the Sudoku in ${timer} seconds!`);\n      stopTimer();\n      submitScore(username, timer);\n      navigate('/');\n\n    }\n  }, [grid, isDataLoaded, timer, username, navigate, submitScore]);\n\n  useEffect(() => {\n    if (isDataLoaded) {\n      checkSudoku();\n    }\n  }, [grid, isDataLoaded, checkSudoku]);\n\n\n\n\n  useEffect(() => {\n    return () => {\n      isTimerActiveRef.current = false; // Sørg for at timeren stopper, når komponenten unmounts\n    };\n  }, []);\n\n  // Calculate the square root of n to determine subgrid size\n  const subGridSize = Math.sqrt(n);\n  const baseSize = 500; // Base size for the Sudoku board\n  const cellSize = baseSize / n;\n  const fontSize = Math.max(12, cellSize / 3); // Adjust this formula as needed\n\n  // Modify the return statement in your SudokuView component\n  return (\n    <div className=\"SudokuView\">\n      <h1>Sudoku</h1>\n      <div className=\"timer\">Timer: {timer} sekunder</div>\n      <button onClick={() => setIsNotesMode(!isNotesMode)}>\n        {isNotesMode ? 'Disable Notes Mode' : 'Enable Notes Mode'}\n      </button>\n      <table className=\"center\" style={{ width: baseSize + 'px', height: baseSize + 'px' }}>\n        <tbody>\n          {grid.map((row, i) => (\n            <tr key={i}>\n              {row.map((value, j) => (\n                <td\n                  key={j}\n                  className={\n                    `${!validity[i][j] ? 'invalid' : ''} ` +\n                    `${(j + 1) % subGridSize === 0 && j + 1 !== n ? 'right-border' : ''} ` +\n                    `${(i + 1) % subGridSize === 0 && i + 1 !== n ? 'bottom-border' : ''}`\n                  }\n                  style={{ width: cellSize + 'px', height: cellSize + 'px' }}\n                >\n                  {notes[i][j].length > 0 && isNotesMode ? (\n                    <div className=\"notes\" style={{ fontSize: fontSize + 'px' }}>{notes[i][j].join(', ')}</div>\n                  ) : (\n                    <input\n                      type=\"text\"\n                      className={`${!validity[i][j] ? 'invalid-input' : ''} ${userEdits[i][j] ? 'user-input' : ''}`}\n                      value={value === 0 ? '' : value}\n                      onChange={(event) => handleInputChange(event, i, j)}\n                      readOnly={!editableCells[i][j]}\n                      style={{ fontSize: fontSize + 'px' }}\n                    />\n                  )}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n\n}\n\nexport default SudokuView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
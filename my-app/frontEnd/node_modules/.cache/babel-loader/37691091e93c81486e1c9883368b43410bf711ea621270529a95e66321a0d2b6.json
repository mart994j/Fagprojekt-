{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\OneDrive\\\\Skrivebord\\\\Fagprojekt\\\\Fagprojekt-\\\\my-app\\\\src\\\\SudokuView.js\";\nimport React, { Component } from 'react';\nimport './SudokuView.css';\nimport SudokuGenerator from './sudokuGen';\n\n// Assuming SudokuGenerator class is defined above or imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass SudokuView extends Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = (event, i, j) => {\n      const value = event.target.value;\n      if (value === '' || /^\\d+$/.test(value) && value >= 1 && value <= 9) {\n        const numValue = value === '' ? 0 : parseInt(value, 10);\n        const newGrid = this.state.grid.map((row, rowIndex) => row.map((cell, cellIndex) => rowIndex === i && cellIndex === j ? numValue : cell));\n        this.setState({\n          grid: newGrid\n        });\n      }\n    };\n    // Implement your method for checking Sudoku's validity\n    this.checkSudoku = () => {\n      // Placeholder for checking logic\n      console.log(\"Check Sudoku logic goes here.\");\n    };\n    const generator = new sudokuGen();\n    this.state = {\n      grid: generator.generateGrid()\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SudokuView\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.grid.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: row.map((value, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: value === 0 ? '' : value,\n                onChange: event => this.handleInputChange(event, i, j)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }, this)\n            }, j, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this))\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.checkSudoku,\n        children: \"Check Sudoku\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default SudokuView;","map":{"version":3,"names":["React","Component","SudokuGenerator","jsxDEV","_jsxDEV","SudokuView","constructor","props","handleInputChange","event","i","j","value","target","test","numValue","parseInt","newGrid","state","grid","map","row","rowIndex","cell","cellIndex","setState","checkSudoku","console","log","generator","sudokuGen","generateGrid","render","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["C:/Users/marti/OneDrive/Skrivebord/Fagprojekt/Fagprojekt-/my-app/src/SudokuView.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport './SudokuView.css';\r\nimport SudokuGenerator from './sudokuGen';\r\n\r\n// Assuming SudokuGenerator class is defined above or imported\r\n\r\nclass SudokuView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const generator = new sudokuGen();\r\n    this.state = {\r\n      grid: generator.generateGrid(),\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event, i, j) => {\r\n    const value = event.target.value;\r\n    if (value === '' || (/^\\d+$/.test(value) && value >= 1 && value <= 9)) {\r\n      const numValue = value === '' ? 0 : parseInt(value, 10);\r\n      const newGrid = this.state.grid.map((row, rowIndex) =>\r\n        row.map((cell, cellIndex) => rowIndex === i && cellIndex === j ? numValue : cell)\r\n      );\r\n      this.setState({ grid: newGrid });\r\n    }\r\n  };\r\n\r\n  // Implement your method for checking Sudoku's validity\r\n  checkSudoku = () => {\r\n    // Placeholder for checking logic\r\n    console.log(\"Check Sudoku logic goes here.\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"SudokuView\">\r\n        <table className=\"center\">\r\n          <tbody>\r\n            {this.state.grid.map((row, i) => (\r\n              <tr key={i}>\r\n                {row.map((value, j) => (\r\n                  <td key={j}>\r\n                    <input \r\n                      type=\"text\" \r\n                      value={value === 0 ? '' : value} \r\n                      onChange={(event) => this.handleInputChange(event, i, j)} \r\n                    />\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <button onClick={this.checkSudoku}>Check Sudoku</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SudokuView;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"export const fetchNewBoard = ({\n  setGrid,\n  setEditableCells,\n  setUserEdits,\n  setValidity,\n  setIsDataLoaded,\n  setTimer,\n  setIsTimerActive\n}) => {\n  console.log('Fetching new board...');\n  fetch('http://localhost:3000/generate').then(response => response.json()).then(data => {\n    console.log('Board fetched:', data.board);\n    const boardSize = data.board.length;\n    setGrid(data.board);\n    const editable = data.board.map(row => row.map(value => value === 0));\n    setEditableCells(editable);\n    setUserEdits(Array(boardSize).fill().map(() => Array(boardSize).fill(false)));\n    setValidity(Array(boardSize).fill().map(() => Array(boardSize).fill(true)));\n    setIsDataLoaded(true);\n    setTimer(0);\n    setIsTimerActive(true);\n  }).catch(error => {\n    console.error('Error fetching data: ', error);\n  });\n};","map":{"version":3,"names":["fetchNewBoard","setGrid","setEditableCells","setUserEdits","setValidity","setIsDataLoaded","setTimer","setIsTimerActive","console","log","fetch","then","response","json","data","board","boardSize","length","editable","map","row","value","Array","fill","catch","error"],"sources":["C:/Users/marti/OneDrive/Skrivebord/Fagprojekt/Fagprojekt-/my-app/frontEnd/src/fetchNewBoard.js"],"sourcesContent":["export const fetchNewBoard = ({\r\n  setGrid,\r\n  setEditableCells,\r\n  setUserEdits,\r\n  setValidity,\r\n  setIsDataLoaded,\r\n  setTimer,\r\n  setIsTimerActive\r\n}) => {\r\n  console.log('Fetching new board...');\r\n  fetch('http://localhost:3000/generate')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log('Board fetched:', data.board);\r\n      const boardSize = data.board.length;\r\n      setGrid(data.board);\r\n      const editable = data.board.map(row => row.map(value => value === 0));\r\n      setEditableCells(editable);\r\n      setUserEdits(Array(boardSize).fill().map(() => Array(boardSize).fill(false)));\r\n      setValidity(Array(boardSize).fill().map(() => Array(boardSize).fill(true)));\r\n      setIsDataLoaded(true);\r\n      setTimer(0);\r\n      setIsTimerActive(true);\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching data: ', error);\r\n    });\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAGA,CAAC;EAC5BC,OAAO;EACPC,gBAAgB;EAChBC,YAAY;EACZC,WAAW;EACXC,eAAe;EACfC,QAAQ;EACRC;AACF,CAAC,KAAK;EACJC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACpCC,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;IACZN,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEK,IAAI,CAACC,KAAK,CAAC;IACzC,MAAMC,SAAS,GAAGF,IAAI,CAACC,KAAK,CAACE,MAAM;IACnChB,OAAO,CAACa,IAAI,CAACC,KAAK,CAAC;IACnB,MAAMG,QAAQ,GAAGJ,IAAI,CAACC,KAAK,CAACI,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACD,GAAG,CAACE,KAAK,IAAIA,KAAK,KAAK,CAAC,CAAC,CAAC;IACrEnB,gBAAgB,CAACgB,QAAQ,CAAC;IAC1Bf,YAAY,CAACmB,KAAK,CAACN,SAAS,CAAC,CAACO,IAAI,CAAC,CAAC,CAACJ,GAAG,CAAC,MAAMG,KAAK,CAACN,SAAS,CAAC,CAACO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAC7EnB,WAAW,CAACkB,KAAK,CAACN,SAAS,CAAC,CAACO,IAAI,CAAC,CAAC,CAACJ,GAAG,CAAC,MAAMG,KAAK,CAACN,SAAS,CAAC,CAACO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3ElB,eAAe,CAAC,IAAI,CAAC;IACrBC,QAAQ,CAAC,CAAC,CAAC;IACXC,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC,CAAC,CACDiB,KAAK,CAACC,KAAK,IAAI;IACdjB,OAAO,CAACiB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;EAC/C,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}